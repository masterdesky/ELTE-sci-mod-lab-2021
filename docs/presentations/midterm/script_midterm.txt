* title slide *
Hi everyone in this presentation! I thought that since this is the midterm presentation and thus it is a somewhat bigger one, I want to tell you again some of the main goals and background of the project I'm working on. Later on I'll present you what goals did I achieve throughout the course until now and also show you my actual work on the project. My supervisor is still Ákos Horváth and let's start.



* slide 1 *
As you know my project is about creating a nuclear physics simulation. More precisely I'm intended to implement inside a computer simulation environment the Japanese NEBULA detector - which is part of the SAMURAI beam line system in the RIKEN Research Institute. This detector is primarily designed to detect neutrons in this given 100 to 300 MeV energy range, originated from various particle events. We study this particular detector because of numerous reasons. But the one reason what I wanted to emphasize is that NEBULA produces results with state-of-the-art accuracy and resolution, when it comes to neutron detection, which makes it already a fascinating interest of study even on itself.

The NEBULA detector is a so-called plastic scintillator array. "Plastic scintillator" means, that the material in the detector is a scintillator made out of plastic (in this case this scintillator material is called as BC-408), while the "array" term means, that the detector consists of several smaller, but similar elements. Scintillator rods to be precise. These rods are organized into 2 big blocks, where a block consists of 60 so-called NEUT scintillator rods in two layers, and a third layer of 12 VETO rods. NEUT rods are responsible for the neutron detection, while VETO rods are responsible for the detection of charged particles. In summary, the NEBULA detector consist of 120 NEUT and 24 VETO rods, so 144 scintillator rods in total.



* slide 2 *
So my project work is to implement this NEBULA system that I just described and test, how it behaves when a neutron beam passes through it. For this, I'm using the Geant4 simulation toolkit. The word "Geant" comes from the term "GEometry ANd Tracking". This is the fourth iteration of a nearly 50 years (5 decades) old software package. Nowadays it offers an immense number of tools for the users and it can be easily considered as a full-fledged simulation engine to develop softwares on. This makes using Geant4 an actual software developing job even at the most basic level. But despite it's very steep learning curve even from the very beginning, it is still possible to learn it.

To create any kind of simulations using Geant4, one has to define exactly 2 important things (or blocks, or section or whatever we call it) in order to succeed. The first block is what we refer to as "detector construction" or more like "geometry construction". This can be interpreted as some kind of 3D modeling environment. Before doing anything, here we have to create a so-called "World" volume, which encompasses everything, that happens in the simulation. This is the border of the universe in our simulations. If something leaves it, or clips out of it, that ceases to exists forever. After we constructed the "World", we can place everything else, inside this volume. Our detectors, target blocks, we place every physical object into this 3D environment, that we want to include in our simulation.

Blocks can be defined with arbitrary dimensions and shapes, as long as they stay inside the World volume. We also need to assign some very basic and necessary properties to our shapes/geometries, like the type of their materials, their exact behaviour in the simulation, and so on. A lot of things required and a myriad of properties are optional on top of that.

If the geometry construction is done, we can discuss the particle beam setup, the second most important thing in a Geant4 simulation. Here we're almost exclusively using a class named "particleGun", which is pretty much self-explanatory. When we're configuring a particle beam in our Geant4 project, we're simply just defining a single particle by setting its initial position and momentum vector, energy and so on, other physical properties. And in the simulation we shot this particle - defined using the particleGun - into the simulation scene.



* slide 3 *
Now that we discussed these background infos, let's speak about my advancements in the project work, and what have I done up until now during the semester. Last time, on the last presentation I've mentioned, that our goal until the midterm presentation is, that 1. we completely finish the implementation of the NEBULA detector in Geant4. 2. we finish the particle beam configuration and 3. we finally conduct an experiment, where we shoot a neutron beam on the finished detector.

First let me show you on this slide how this simplified geometry looks like and why does it looks like this. As I mentioned on the first slide, the NEBULA detector consists of two blocks of 2 by 30 NEUT scintillator rods plus 24 VETO blocks in total. In this project we're only focusing on the simulation of the neutron detection NEUT blocks, so I won't speak about the VETO blocks anymore.

Since neutrons hit this detector almost perpendicular in any points, we don't need to care about inbound neutrons coming at large inclinations. So, because our neutrons are approximately parallel to each other, no matter where they hit the detector face, we need to simulate only a smaller section of the NEBULA detector. If a neutron hits the detector on one side, the very same thing would happen on the other side and in the center too. That's why in my simulation there is only a 2 by 10 size section implemented as you can see on this image. You can also read here, that the rods are 180 cm long and their smaller face is a square with side length of 12 cm.

I'll tell you about this to-do in a minute on the next slide.

So our detector is ready, the rods are filled with this BC-408 material and it awaits for and incoming neutron beam. So let's give it to it.



* slide 4 *
Boom. Okay, so what happens here? As I've told you, using the particleGun from Geant4 I've created a neutron particle and set some randomized initial conditions for it. Randomized initial conditions means, that the neutrons inbound the scene behind this section of the NEBULA detector, nicknamed as "NEBULA wall" on this image. They spawn in a rectangle shaped region, parallel to the detector, and their X and Y coordinates are sampled randomly from the uniform distribution. Previously I said, that neutrons are approximately parallel. I want to emphasize the "approximately" part, because of course, there will be a very small inclination difference between neutrons - whose originate from the same event - hitting two different sides of the detector. That's why I gave these neutron you can see on this image as green lines a very small starting tilt.

Because the operational energy of the NEBULA detector is between 100 and 300 MeV, I simply set the energy of the incoming neutrons to 100 MeV, the lower edge of the energy range.

You can also see a block named Neutron E. Counter in the scene. So that is obviously not present in the NEBULA detector, since that is the actual neutron counter. it is there for testing reasons currently. On my previous slide there was a TO-OD point, where I stated, that I need to assign a "scoring volume to the logical volumes of the detector rods". Without going into any details, this means, that currently this Neutron energy counter block measures the energies of the neutrons passing through it, but in the final simulation I obviously want the NEBULA rods to do the same thing.

I had a reference work in the form the bachelor thesis work of Dávid Pesznyák from last year. It contains information about how the NEBULA detector should behave in a Geant4 simulation. I compared this image to the one he had in his thesis, and the trajectories of the neutron was basically the same. This is a third-hand confirmation that my simulation actually works well and just as intended.



* slide 5 *
Now at the end of the presentation I want to give you a final wrap up of my advancements and tell you some words about the future goals. As you've seen it is much more of a technical project, or it has relatively bigger emphasis on the technical steps. So first I setup the Geant4 and the necessary development environment for the project. First I had to learn, how to use this simulation engine at the very basic level, which took a lot of time. After that I was able to implement a simplified version of the NEBULA detector (so just a section of one of two the blocks and only the NEUT rods). I also created a neutron beam with characteristics typical to a real, actual experiment. I had to write some Geant4 macros too to nicely visualize the detector and the events happening during a simulation (that's what you have seen), but they can be still fine tuned, I don't consider them as done. And now only the analysis part remains. It would be really nice to measure the distribution of the deposited energy in the rods by the neutrons, because it can used later to analyze real physical events - not just this 100 MeV neutron beam - and based on the distribution to draw conclusions about the different experiments.


And that's all I have for you today, and thank you for your attention!